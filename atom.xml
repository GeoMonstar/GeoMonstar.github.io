<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Monstar的小酒馆</title>
  <subtitle>纵使困顿难行,亦当砥砺奋进</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-08-23T09:46:08.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Monstar</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>百度地图 Annoation 定制</title>
    <link href="http://yoursite.com/2017/08/23/Baidu_anotion/"/>
    <id>http://yoursite.com/2017/08/23/Baidu_anotion/</id>
    <published>2017-08-23T09:17:33.000Z</published>
    <updated>2017-08-23T09:46:08.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>简单介绍在工作中用到的一些定制annoation方法
</code></pre><h2 id="1-动画型"><a href="#1-动画型" class="headerlink" title="1.动画型"></a>1.动画型</h2><p>利用UIImageView startAnimating 这一属性可以让地图上的标注产生动画效果</p>
<p><img src="/img/animate.gif" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">//先将将BMKAnnotationView重写把annotationImageView作为属性</div><div class="line">- (id)initWithAnnotation:(id&lt;BMKAnnotation&gt;)annotation reuseIdentifier:(NSString *)reuseIdentifier &#123;</div><div class="line">    self = [super initWithAnnotation:annotation reuseIdentifier:reuseIdentifier];</div><div class="line">    if (self) &#123;</div><div class="line"> 		//此处可以定制Annotion</div><div class="line">        [self setBounds:CGRectMake(0.f, 0.f, 30.f, 30.f)];</div><div class="line"></div><div class="line">        _annotationImageView = [[UIImageView alloc] initWithFrame:CGRectMake(37.5, 40, 25, 25)];</div><div class="line">        _annotationImageView.contentMode = UIViewContentModeScaleAspectFit;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    return self;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//AnnotationImages作为属性并调用set方法传入数组</div><div class="line">- (void)setAnnotationImages:(NSMutableArray *)images &#123;</div><div class="line">    _annotationImages = images;</div><div class="line">    [self updateImageView];</div><div class="line">&#125;</div><div class="line">//调用imageview属性开始动画</div><div class="line">- (void)updateImageView &#123;</div><div class="line">    if ([_annotationImageView isAnimating]) &#123;</div><div class="line">        [_annotationImageView stopAnimating];</div><div class="line">    &#125;</div><div class="line">    _annotationImageView.animationImages = _annotationImages;</div><div class="line">    _annotationImageView.animationDuration = 0.5 * [_annotationImages count];</div><div class="line">    _annotationImageView.animationRepeatCount = 0;</div><div class="line">    [_annotationImageView startAnimating];</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>地图上添加代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">- (BMKAnnotationView *)mapView:(BMKMapView *)mapView viewForAnnotation:(id &lt;BMKAnnotation&gt;)annotation&#123;</div><div class="line"></div><div class="line">MyAnimatedAnnotationView *annotationView = nil;</div><div class="line">        if (annotationView == nil) &#123;</div><div class="line">            annotationView = [[MyAnimatedAnnotationView alloc] initWithAnnotation:annotation reuseIdentifier:AnnotationViewID2];</div><div class="line">            annotationView.canShowCallout = NO;</div><div class="line">        &#125;</div><div class="line">        NSMutableArray *images = [NSMutableArray array];</div><div class="line">        for (int i = 0; i &lt; 4; i++) &#123;</div><div class="line">            UIImage *image = [UIImage imageNamed:[NSString stringWithFormat:@&quot;图片%d&quot;,i]];</div><div class="line">            [images addObject:image];</div><div class="line">        &#125;</div><div class="line">        annotationView.annotationImages = images;</div><div class="line">        return annotationView;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>##2.定制一个PopView<br>图片圆角设置时通常会设置 <strong>cornerRadius</strong> 属性<br>其本质为 <strong>两条相交的直线以cornerRadius为半径的内切圆的弧线段</strong><br><img src="/img/popview.png" alt=""><br>图中中间部分的4个圆角可以用UIBezierPath进行某个位置的圆角裁剪<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">UIBezierPath * maskPath = [UIBezierPath bezierPathWithRoundedRect:self.bounds byRoundingCorners:(UIRectCornerBottomLeft | UIRectCornerBottomRight)cornerRadii:CGSizeMake(5, 5)];</div><div class="line">   CAShapeLayer *maskLayer = [[CAShapeLayer alloc] init];</div><div class="line">   maskLayer.frame = self.bounds;</div><div class="line">   maskLayer.path = maskPath.CGPath;</div><div class="line">   self.layer.mask = maskLayer;</div></pre></td></tr></table></figure></p>
<p>本例中白色三角形覆盖了灰色阴影 三角形一般绘制在CAShapeLayer一层,在UIView的最底部,如果圆角利用UIView的属性来做必然会遮挡住三角形,所以阴影也应该会制在CAShapeLayer一层</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">//在定制UIView的drawRect方法里绘图</div><div class="line">- (void)drawRect:(CGRect)rect</div><div class="line"></div><div class="line">&#123;</div><div class="line">    [self drawShadow];</div><div class="line">    [self drawTriangle];</div><div class="line"></div><div class="line">&#125;</div><div class="line">- (void)drawTriangle&#123;</div><div class="line"></div><div class="line">    CGMutablePathRef pathRef1 = CGPathCreateMutable();</div><div class="line">    CGFloat location = self.frame.origin.x + self.frame.size.width/2;</div><div class="line">    CGPathMoveToPoint(pathRef1, nil, location+10, self.frame.origin.y +self.frame.size.height -TriangleHeight);</div><div class="line">    CGPathAddLineToPoint(pathRef1, nil, location -2, self.frame.origin.y +self.frame.size.height);</div><div class="line">    CGPathAddLineToPoint(pathRef1, nil, location, self.frame.origin.y +self.frame.size.height -TriangleHeight);</div><div class="line">    CGPathAddLineToPoint(pathRef1, nil, location+10, self.frame.origin.y +self.frame.size.height -TriangleHeight);</div><div class="line">    CGPathCloseSubpath(pathRef1);</div><div class="line">    </div><div class="line">    CAShapeLayer *layer1 = [[CAShapeLayer alloc] init];</div><div class="line">    layer1.path = pathRef1;</div><div class="line">    layer1.strokeColor = [UIColor whiteColor].CGColor;</div><div class="line">    layer1.fillColor   = [UIColor whiteColor].CGColor;</div><div class="line">    [self.layer insertSublayer:layer1 atIndex:1];</div><div class="line">    CGPathRelease(pathRef1);</div><div class="line">&#125;</div><div class="line">- (void)drawShadow&#123;</div><div class="line">   </div><div class="line">    CGMutablePathRef pathRef = CGPathCreateMutable();</div><div class="line">    CGRect bounds = CGRectInset(self.bounds, 0, 0);</div><div class="line">    CGFloat cornerRadius = 5.f;</div><div class="line"></div><div class="line">    //绘制偏移的阴影层，四个角为曲线</div><div class="line">    </div><div class="line">    CGPathMoveToPoint(pathRef, nil, CGRectGetMinX(bounds)+cornerRadius, CGRectGetMaxY(bounds)-cornerRadius);</div><div class="line">    CGPathAddArcToPoint(pathRef, nil, CGRectGetMinX(bounds)+cornerRadius, CGRectGetMinY(bounds)+cornerRadius, CGRectGetMidX(bounds), CGRectGetMinY(bounds)+cornerRadius, cornerRadius);</div><div class="line">    CGPathAddArcToPoint(pathRef, nil, CGRectGetMaxX(bounds)-cornerRadius, CGRectGetMinY(bounds)+cornerRadius, CGRectGetMaxX(bounds)-cornerRadius, CGRectGetMidY(bounds)+cornerRadius, cornerRadius);</div><div class="line">    CGPathAddArcToPoint(pathRef, nil, CGRectGetMaxX(bounds)-cornerRadius, CGRectGetMaxY(bounds)-cornerRadius, CGRectGetMidX(bounds), CGRectGetMaxY(bounds)-cornerRadius, cornerRadius);</div><div class="line">    CGPathAddArcToPoint(pathRef, nil, CGRectGetMinX(bounds)+cornerRadius, CGRectGetMaxY(bounds)-cornerRadius, CGRectGetMinX(bounds)+cornerRadius, CGRectGetMidY(bounds)+cornerRadius, cornerRadius);</div><div class="line"></div><div class="line">    CAShapeLayer *layer = [[CAShapeLayer alloc] init];</div><div class="line">    layer.path = pathRef;</div><div class="line">    layer.strokeColor = [UIColor clearColor].CGColor;</div><div class="line">    layer.fillColor   = [UIColor colorWithRed:0 green:0 blue:0 alpha:0.3].CGColor;</div><div class="line">    [self.layer insertSublayer:layer atIndex:0];</div><div class="line">    CGPathRelease(pathRef);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;简单介绍在工作中用到的一些定制annoation方法
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;1-动画型&quot;&gt;&lt;a href=&quot;#1-动画型&quot; class=&quot;headerlink&quot; title=&quot;1.动画型&quot;&gt;&lt;/a&gt;1.动画型&lt;/h2&gt;&lt;p&gt;利用UIIma
    
    </summary>
    
    
  </entry>
  
</feed>
